import type { Config as Config_2 } from '@jest/types';
export declare type Config = Config_2.InitialOptions;
export default function defineJestConfig(config: Config): {
    bail: number;
    verbose: boolean;
    testEnvironment: string;
    testEnvironmentOptions: {
        url: string;
        customExportConditions: string[];
    };
    testMatch: string[];
    setupFiles: string[];
    collectCoverageFrom: string[];
    transform: {
        '^.+\\.(js|jsx|ts|tsx)$': string;
    };
    transformIgnorePatterns: never[];
    moduleFileExtensions: string[];
    moduleNameMapper: {
        '@tarojs/taro$': string;
        '@tarojs/components$': string;
    };
    globals: {
        ENABLE_INNER_HTML: boolean;
        ENABLE_ADJACENT_HTML: boolean;
        ENABLE_SIZE_APIS: boolean;
        DEPRECATED_ADAPTER_COMPONENT: boolean;
        ENABLE_TEMPLATE_CONTENT: boolean;
        ENABLE_MUTATION_OBSERVER: boolean;
        ENABLE_CLONE_NODE: boolean;
        ENABLE_CONTAINS: boolean;
        __TARO_FRAMEWORK__: string;
        'ts-jest': {
            diagnostics: boolean;
            tsconfig: {
                jsx: string;
                allowJs: boolean;
                target: string;
            };
        };
        'babel-jest': {
            presets: (string | (string | {
                modules: string;
            })[])[];
        };
    };
} & {
    automock?: boolean | undefined;
    bail?: number | boolean | undefined;
    cache?: boolean | undefined;
    cacheDirectory?: string | undefined;
    ci?: boolean | undefined;
    clearMocks?: boolean | undefined;
    changedFilesWithAncestor?: boolean | undefined;
    changedSince?: string | undefined;
    collectCoverage?: boolean | undefined;
    collectCoverageFrom?: string[] | undefined;
    coverageDirectory?: string | undefined;
    coveragePathIgnorePatterns?: string[] | undefined;
    coverageProvider?: ("babel" | "v8") | undefined;
    coverageReporters?: Config_2.CoverageReporters | undefined;
    coverageThreshold?: {
        [path: string]: Config_2.CoverageThresholdValue;
        global: Config_2.CoverageThresholdValue;
    } | undefined;
    dependencyExtractor?: string | undefined;
    detectLeaks?: boolean | undefined;
    detectOpenHandles?: boolean | undefined;
    displayName?: string | Config_2.DisplayName | undefined;
    expand?: boolean | undefined;
    extensionsToTreatAsEsm?: string[] | undefined;
    fakeTimers?: (Config_2.GlobalFakeTimersConfig & ((Config_2.FakeTimersConfig & {
        now?: number | undefined;
    }) | Config_2.LegacyFakeTimersConfig)) | undefined;
    filter?: string | undefined;
    findRelatedTests?: boolean | undefined;
    forceCoverageMatch?: string[] | undefined;
    forceExit?: boolean | undefined;
    json?: boolean | undefined;
    globalSetup?: string | null | undefined;
    globalTeardown?: string | null | undefined;
    haste?: Config_2.HasteConfig | undefined;
    id?: string | undefined;
    injectGlobals?: boolean | undefined;
    reporters?: (string | Config_2.ReporterConfig)[] | undefined;
    logHeapUsage?: boolean | undefined;
    lastCommit?: boolean | undefined;
    listTests?: boolean | undefined;
    maxConcurrency?: number | undefined;
    maxWorkers?: string | number | undefined;
    moduleDirectories?: string[] | undefined;
    moduleFileExtensions?: string[] | undefined;
    modulePathIgnorePatterns?: string[] | undefined;
    modulePaths?: string[] | undefined;
    noStackTrace?: boolean | undefined;
    notify?: boolean | undefined;
    notifyMode?: string | undefined;
    onlyChanged?: boolean | undefined;
    onlyFailures?: boolean | undefined;
    openHandlesTimeout?: number | undefined;
    outputFile?: string | undefined;
    passWithNoTests?: boolean | undefined;
    preset?: string | null | undefined;
    prettierPath?: string | null | undefined;
    projects?: (string | Config_2.InitialProjectOptions)[] | undefined;
    randomize?: boolean | undefined;
    replname?: string | null | undefined;
    resetMocks?: boolean | undefined;
    resetModules?: boolean | undefined;
    resolver?: string | null | undefined;
    restoreMocks?: boolean | undefined;
    rootDir?: string | undefined;
    roots?: string[] | undefined;
    runner?: string | undefined;
    runTestsByPath?: boolean | undefined;
    runtime?: string | undefined;
    sandboxInjectedGlobals?: string[] | undefined;
    setupFiles?: string[] | undefined;
    setupFilesAfterEnv?: string[] | undefined;
    showSeed?: boolean | undefined;
    silent?: boolean | undefined;
    skipFilter?: boolean | undefined;
    skipNodeResolution?: boolean | undefined;
    slowTestThreshold?: number | undefined;
    snapshotResolver?: string | undefined;
    snapshotSerializers?: string[] | undefined;
    snapshotFormat?: Partial<{
        readonly callToJSON: boolean;
        readonly compareKeys: null;
        readonly escapeRegex: boolean;
        readonly escapeString: boolean;
        readonly highlight: boolean;
        readonly indent: number;
        readonly maxDepth: number;
        readonly maxWidth: number;
        readonly min: boolean;
        readonly printBasicPrototype: boolean;
        readonly printFunctionName: boolean;
        readonly theme: Partial<{
            readonly comment: string;
            readonly content: string;
            readonly prop: string;
            readonly tag: string;
            readonly value: string;
        }>;
    }> | undefined;
    errorOnDeprecated?: boolean | undefined;
    testEnvironment?: string | undefined;
    testEnvironmentOptions?: Record<string, unknown> | undefined;
    testFailureExitCode?: string | number | undefined;
    testLocationInResults?: boolean | undefined;
    testMatch?: string[] | undefined;
    testNamePattern?: string | undefined;
    testPathIgnorePatterns?: string[] | undefined;
    testRegex?: string | string[] | undefined;
    testResultsProcessor?: string | undefined;
    testRunner?: string | undefined;
    testSequencer?: string | undefined;
    testTimeout?: number | undefined;
    transform?: {
        [regex: string]: string | Config_2.TransformerConfig;
    } | undefined;
    transformIgnorePatterns?: string[] | undefined;
    watchPathIgnorePatterns?: string[] | undefined;
    unmockedModulePathPatterns?: string[] | undefined;
    updateSnapshot?: boolean | undefined;
    useStderr?: boolean | undefined;
    verbose?: boolean | undefined;
    watch?: boolean | undefined;
    watchAll?: boolean | undefined;
    watchman?: boolean | undefined;
    watchPlugins?: (string | [string, Record<string, unknown>])[] | undefined;
    workerIdleMemoryLimit?: string | number | undefined;
    workerThreads?: boolean | undefined;
};
